version: '3'
services:
  app:
    container_name: exchange-aggregation-service
    image: exchange-aggregation-service:v1
    build: .
    depends_on:
      - redis-server
      - database-server
      - zookeeper
      - kafka
    links:
      - redis-server
      - database-server
      - kafka
    ports:
      - "8081:8081"
    volumes:
      - ~/docker/tradesoft/exchange-aggregation-service:/logs
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://database-server/exchange-aggregation-service
      SPRING_DATASOURCE_USERNAME: admin
      SPRING_DATASOURCE_PASSWORD: exchangeaggregationservice

  redis-server:
    container_name: redis
    image: redis:latest
    hostname: redis
    ports:
      - "6379:6379"

  database-server:
    container_name: postgres
    image: postgres
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: exchange-aggregation-service
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: exchangeaggregationservice

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: 127.0.0.1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'false'
